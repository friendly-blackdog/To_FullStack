3+4
1:10
2+3
(3+6)*8
2^3                # 2의 세제곱을 계산함
14/3
14%%3              # 나머지
log(10)+5          # 로그함수
sqrt(25)           # 제곱근
max(5,3,9)         # 제일 큰 값
min(5,3,9)
PI <- 3.14
R <- 10
R * R * PI
R <- 15
R * R * PI
R <- 20
R * R * PI
x <- c(1,2,3)                  # 숫자형 벡터
y <- c("a","b","c")            # 문자형 벡터
Z <- c(TRUE,TRUE, FALSE, TRUE) # 논리형 벡터
x                      # x 에 저장된 값을 출력하라는 의미
y
x <- c(1,2,3)
z <- c("a","b","c")
v1 <- 50:90
v1
v2 <- c(1,2,5, 50:90)
v2
v3 <- seq(1,101,3)     # 시작,종료,간격
v3
v4 <- seq(0.1,1.0,0.1)     # 시작,종료,간격
v4
v5 <- rep(1,times = 5)     # 1 을 5번 반복
v5
v6 <- rep(1:5,times = 3)
v6
v7 <- rep(c("a","b","c"),each = 3)
v7
v8 <- rep(c("a","b","c"),times = 3)
v8
score <- c(90,85,70)    # 성적
names(score) <- c("John","Tom","Jane")
score                   # 이름과 함께 값이 출력
names(score)[2]
d <- c(1,4,3,7,8)
d[2]           #  벡터에서 두번째 값
d <- c(1,4,3,7,8)
d[1:3]
d
d[1:3]
d[c(1,3,5)]
d[seq(1,5,2)]
d <-  c(1,4,3,7,8,9)
d[-2]
d
d[-c(3:5)]
d <- c(1,4,3,7,8)
d[1:3]           # 처음 세개의 자료 출력
d[c(1,3,5)]
d[seq(1,5,2)]    # 홀수번째 자료 출력
d <- c(1,4,3,7,8,9)
d[-2]           # - 는 ‘제외하고’ 의 의미.
d[-c(3:5)]      # 세번째에서 다섯번째 값은 제외하고
GNP <- c(2090,2450,960) # GNP
names(GNP) <- c("Korea","Japan","Nepal")
GNP[1]
GNP["Korea"]
GNP[c("Korea","Nepal")]
welfare$religion <- ifelse(welfare$religion ==1, "yes", "no")
# 데이터 불러오기
raw_welfare <- read.spss(file = "Koweps_hpc10_2015_beta1.sav", to.data.frame = T)
library(foreign) # SPSS 파일 로드
library(dplyr) # 전처리
library(ggplot2) # 시각화
library(readxl)# 엑셀 파일 불러오기
# 데이터 불러오기
raw_welfare <- read.spss(file = "Koweps_hpc10_2015_beta1.sav", to.data.frame = T)
setwd("~/Desktop/To_FullStack/lecture/데청캠_동국대/수업/data")
# 데이터 불러오기
raw_welfare <- read.spss(file = "Koweps_hpc10_2015_beta1.sav", to.data.frame = T)
# 복사본 만들기
welfare <- raw_welfare
welfare$religion <- ifelse(welfare$religion ==1, "yes", "no")
welfare <- rename(welfare,
sex=h10_g3,           #성별
birth=h10_g4,         #태어난 연도
marriage=h10_g10,     #혼인 상태
religion=h10_g11,     #종교
income=p1002_8aq1,    #월급
code_job=h10_eco9,    #직종 코드
code_region=h10_reg7) #지역 코드
welfare$religion <- ifelse(welfare$religion ==1, "yes", "no")
class(welfare$marriage)
table(welafe$marriage)
table(welfare$marriage)
welfare$group_marraige <- ifelse(welfare$marriage ==1, "marriage",
ifelse(welfare$marriage ==3, "divorce", NA))
table(welfare$group_marriage)
table(welfare$group_marriage)
welfare$group_marriage <- ifelse(welfare$marriage ==1, "marriage",
ifelse(welfare$marriage ==3, "divorce", NA))
table(welfare$group_marriage)
table(is.na(welfare$group_marriage))
religion_marriage <- welfare %>%
filter(!is.na(group_marriage)) %>%
group_by(religion, group_marriage) %>%
summarise(n=n()) %>%
mutate(tot_group=sum(n)) %>%
mutate(pct=round(n/tot_group*100, 1))
religion_marriage
#count() 활용
religion_marriage <- welfare %>%
filter(!is.na(group_marriage)) %>%
count(religion, group_marriage) %>%
group_by(religion) %>%
mutate(pct=round(n/sum(n)*100,1))
religion_marriage
divorce <- religion_marriage %>%
filter(group_marriage == "divorce") %>%
select(religion, pct)
ggplot(data=divorce, aes(x=religion, y=pct)) +
geom_col()
ageg_marriage <- welfare %>%
filter(!is.na(group_marriage)) %>%
group_by(ageg, group_marriage) %>%
summarise(n=n()) %>%
mutate(tot_group=sum(n)) %>%
mutate(pct=round(n/tot_group*100, 1))
welfare <- welfare %>%
mutate(ageg=ifelse(age<30, "young",
ifelse(age <=59, "middle", "old")))
qplot(welfare$age)
welfare <- welfare %>%
mutate(ageg=ifelse(age<30, "young",
ifelse(age <=59, "middle", "old")))
welfare$age <- 2015 - welfare$birth + 1
welfare <- welfare %>%
mutate(ageg=ifelse(age<30, "young",
ifelse(age <=59, "middle", "old")))
ageg_marriage <- welfare %>%
filter(!is.na(group_marriage)) %>%
group_by(ageg, group_marriage) %>%
summarise(n=n()) %>%
mutate(tot_group=sum(n)) %>%
mutate(pct=round(n/tot_group*100, 1))
ageg_marriage
ageg_marriage <- welfare %>%
filter(!is.na(group_marriage)) %>%
count(ageg, group_marriage) %>%
group_by(ageg) %>%
mutate(pct=round(n/sum(n)*100,1))
ageg_religion_marriage <- welfare %>%
filter(!is.na(group_marriage) & ageg != "young") %>%
group_by(ageg, religion, group_marriage) %>%
summarise(n=n()) %>%
mutate(tot_group=sum(n)) %>%
mutate(pct=round(n/tot_group*100, 1))
ageg_religion_marriage
ggplot(data=df_divorce, aes(x=ageg, y=pct, fill=religion)) +
geom_col(position="dodg")
df_divorce <- ageg_religion_marriage %>%
filter(group_marriage == "divorce") %>%
select(ageg, religion, pct)
ggplot(data=df_divorce, aes(x=ageg, y=pct, fill=religion)) +
geom_col(position="dodg")
ggplot(data=df_divorce, aes(x=ageg, y=pct, fill=religion)) +
geom_col(position="dodge")
class(welfare$code_region)
list_region <- data.frame(code_region=c(1:7),
region=c("서울",
"수도권(인천/경기)",
"부산/경남/울산",
"대구/경북",
"대전/충남",
"강원/충북",
"광주/전남/전북/제주도"))
list_region
welfare <- left_join(welfare, list_region, id="code_region")
welfare %>%
select(code_region, region) %>%
head
region_ageg <- welfare %>%
group_by(region, ageg) %>%
summarise(n=n()) %>%
mutate(tot_group=sum(n)) %>%
mutate(pct=round(n/tot_group*100, 2))
head(region_ageg)
region_ <- welfare %>%
count(region, ageg) %>%
group_by(region) %>%
mutate(pct=round(n/sum(n)*100, 2))
region_ageg <- welfare %>%
count(region, ageg) %>%
group_by(region) %>%
mutate(pct=round(n/sum(n)*100, 2))
region_ageg
ggplot(data=region_ageg, aes(x=region, y=pct, fill=ageg))+
geom_col()+
coord_flip()
list_order_old <- region_ageg %>%
filter(ageg == "old") %>%
arrange(pct)
order <- list_order_old$region
order
ggplot(data=region_ageg, aes(x=region,y=pct, fill=ageg)) +
geom_col()+
coord_flip()+
scale_x_discrete(limits=order)
class(region_ageg$ageg)
levels(region_ageg$ageg)
region_ageg$ageg <- factor(region_ageg$ageg,
level=c("old","middle","young"))
class(region_ageg$ageg)
levels(Region_ageg$ageg)
levels(region_ageg$ageg)
ggplot(data=region_ageg, aes(x=region, y=pct, fill=ageg))+
geom_col()+
coord_flip()+
scale_x_discrete(limits=order)
install.packages("multilinguer")
library(multilinguer)
install_jdk()
install.packages('rJava', type = 'binary');library(rJava);.jinit();rstudioapi::restartSession()
